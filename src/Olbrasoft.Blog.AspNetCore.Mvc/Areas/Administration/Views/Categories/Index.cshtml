@model CategoriesViewModel
@{
    ViewData["Title"] = "Categories";
    Layout = "~/Areas/Administration/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Categories</h1>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Category information
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-lg-12">
                            <form asp-area="Administration" asp-controller="Categories" asp-action="Save" method="post" role="form">
                                <div asp-validation-summary="All" class="text-danger"></div>
                                <input id="id" asp-for="Id" type="hidden">
                                <div class="form-group">
                                    <label>Name</label>
                                    <input id="name" asp-for="Name" class="form-control">
                                    <p class="help-block"><span id="nameRemaingCharacters">@Model.NameMaxLength</span> Character(s) Remaining </p>
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label>Tooltip</label>
                                    <textarea id="tooltip" asp-for="Tooltip" class="form-control" rows="3"></textarea>
                                    <p class="help-block"><span id="tooltipRemaingCharacters">@Model.TooltipLength</span> Character(s) Remaining </p>
                                    <span asp-validation-for="Tooltip" class="text-danger"></span>
                                </div>
                                <button type="submit" class="btn btn-default">Save</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="col-lg-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Your Categories
                </div>
                <div class="panel-body ">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover" id="your-categories">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Tooltip</th>
                                    <th>Created</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
        <div class="col-lg-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Other users' categories
                </div>
                <div class="panel-body ">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover" id="other-users-categories">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Created</th>
                                    <th>Creator</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    </div>
</div>

@section scripts {
    <script src="~/js/momentjs/moment.min.js" asp-append-version="true"></script>
    <script src="~/js/datetime-moment/datetime-moment.js" asp-append-version="true"></script>

    <script type="text/javascript">

      var textlen

    var tooltipMaxLength = @Model.TooltipLength;
    $('#description').keyup(function () {
        textlen = tooltipMaxLength - $(this).val().length;
        $('#tooltipRemaingCharacters').text(textlen);
    });

    var nameMaxLength = @Model.NameMaxLength;
    $('#name').keyup(function () {
        textlen = nameMaxLength - $(this).val().length;
        $('#nameRemaingCharacters').text(textlen);
    });

    $(() => {
        $.fn.dataTable.moment("DD/MM/YYYY HH:mm:ss");
        $.fn.dataTable.moment("DD/MM/YYYY");

        $("#your-categories").DataTable({
            // Design Assets
            stateSave: true,
            autoWidth: true,
            // ServerSide Setups
            processing: true,
            serverSide: true,
            // Paging Setups
            paging: true,
            // Searching Setups
            searching: { regex: true },
            searchable: true,
            // Ajax Filter
            ajax: {
                url: "/Administration/Categories/CurrentUserCategories",
                type: "POST",
                contentType: "application/json",
                dataType: "json",
                data: function (d) {
                    return JSON.stringify(d);
                }
            },
            language: {
                processing: "<img src='/Images/GearLoading.gif'>",
                emptyTable: "No data available in table"
            },
            // Columns Setups
            columns: [
                { data: "name" },
                { data: "tooltip" },

                {
                    data: "created",
                    render: function (data, type, row) {
                        // If display or filter data is requested, format the date
                        if (type === "display" || type === "filter") {
                            return moment(data).format("ddd DD/MM/YYYY HH:mm:ss");
                        }
                        // Otherwise the data type requested (`type`) is type detection or
                        // sorting data, for which we want to use the raw date value, so just return
                        // that, unaltered
                        return data;
                    }
                }
            ],
            // Column Definitions
            columnDefs: [
                { "name": "Name", "targets": 0 },
                { "name": "ToolTip", "targets": 1 },
                { "name": "Created", "targets": 2 },
                {
                    "targets": 3, "data": "id", "className":"dt-body-right"  , "render": function (data, type, full, meta) {
                        return '<a  href=/Administration/Categories/Index/' + data +'><i class="fa fa-pencil" aria-hidden="true"></i> Edit</a>'

                    }
                },

                { "searchable": true, "targets": 0 },
                { targets: "no-sort", orderable: false },
                { targets: "no-search", searchable: false },
                {
                    targets: "trim",
                    render: function (data, type, full, meta) {
                        if (type === "display") {
                            data = strtrunc(data, 10);
                        }

                        return data;
                    }
                },
                { targets: "date-type", type: "date-eu" }
            ]
        });

        $("#other-users-categories").DataTable({
            // Design Assets
            stateSave: true,
            autoWidth: true,
            // ServerSide Setups
            processing: true,
            serverSide: true,
            // Paging Setups
            paging: true,
            // Searching Setups
            searching: { regex: true },
            searchable: true,
            // Ajax Filter
            ajax: {
                url: "/Administration/Categories/OtherUsersCategories",
                type: "POST",
                contentType: "application/json",
                dataType: "json",
                data: function (d) {
                    return JSON.stringify(d);
                }
            },
            language: {
                processing: "<img src='/Images/GearLoading.gif'>",
                emptyTable: "No data available in table"
            },
            // Columns Setups
            columns: [
                {
                    data: "name",
                    render: function (data, type, row) {

                        if (row.tooltip == null)
                        {
                            return "<a href='#' >" + data + "</a>";
                        }

                        return "<a href='#' title='" + row.tooltip + "' >" + data + "</a>";
                    }
                },
                {
                    data: "created",
                    render: function (data, type, row) {
                        // If display or filter data is requested, format the date
                        if (type === "display" || type === "filter") {
                            return moment(data).format("ddd DD/MM/YYYY HH:mm:ss");
                        }
                        // Otherwise the data type requested (`type`) is type detection or
                        // sorting data, for which we want to use the raw date value, so just return
                        // that, unaltered
                        return data;
                    }
                },
                { data: "creator" },
            ],
            // Column Definitions
            columnDefs: [
                { "name": "Name", "targets": 0 },
                { "name": "Created", "targets": 1 },
                { "name": "Creator", "targets": 2, "orderable": false, searchable: false },
                { "searchable": true, "targets": 0 },
                { targets: "no-sort", orderable: false },
                { targets: "no-search", searchable: false },
                {
                    targets: "trim",
                    render: function (data, type, full, meta) {
                        if (type === "display") {
                            data = strtrunc(data, 10);
                        }

                        return data;
                    }
                },
                { targets: "date-type", type: "date-eu" }
            ]
        });
    });
    </script>
}